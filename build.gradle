buildscript {
    ext {
        springBootVersion = '1.3.6.RELEASE'
        jacksonDatabindVersion = '2.6.1'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "http://repository.excilys.com/content/groups/public" }
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
apply plugin: 'maven'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

task copyYamlFiles(type: Copy) {
    fileTree('build/libs')
    from 'src/main/resources/application.yml'
    into 'build/libs/'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}

jar {
    baseName = 'alertsChallenge'
    version = '0.0.1-SNAPSHOT'
}

jar.dependsOn copyYamlFiles


configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

// Integration
sourceSets {
    integrationTest {
        java.srcDir file('src/integrationTest/java')
        resources.srcDir file('src/integrationTest/resources')
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + compileClasspath
    }
}

test << {
    reports.junitXml.destination = file("$testResultsDir/unit")
}

task integrationTest(type: Test) {
    description = 'Runs all integration tests'
    group = 'verification'
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    reports.junitXml.destination = file("$testResultsDir/integration")

    testLogging {
        // Show that tests are run in the command-line output
        events 'started', 'passed', 'skipped', 'failed'
    }
}

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-actuator-docs')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile("org.springframework.boot:spring-boot-starter-undertow")
    compile("com.fasterxml.jackson.core:jackson-databind:${jacksonDatabindVersion}")
    compile("com.fasterxml.jackson.core:jackson-core:2.7.5")
    compile("com.fasterxml.jackson.core:jackson-annotations:2.7.5")
    compile group: 'commons-io', name: 'commons-io', version: '2.4'

    runtime('org.hsqldb:hsqldb')
    runtime('org.postgresql:postgresql')

    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
    testCompile 'junit:junit:4.11'
}
